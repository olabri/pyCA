Live Preview
============

The web interface can show preview images generated by the recording command to monitor what is being recorded.
To enable this, the capture process must generate these still images and write them to a pre-defined location.
A simple example configuration using FFmpeg could look like this::

    command          = '''ffmpeg -nostats -re
                          -f lavfi -r 25 -i testsrc
                          -f lavfi -i sine
                          -t {{time}} -map 0:v -map 1:a {{dir}}/{{name}}.webm
                          -t {{time}} -map 0:v -r 1 -update 1 {{previewdir}}/preview.jpg'''

    preview = '{{previewdir}}/preview.jpg'

This command wound generate a test video and audio stream and record it.
At the same time, this would update ``preview.jpg`` every second.


Include Audio Volume
--------------------

Of ourse, you can build more complex pipelines.
For example, you could include a volume meter like this::

    command          = '''ffmpeg -nostats -re
                          -f lavfi -r 25 -i testsrc
                          -f lavfi -i sine
                          -t {{time}} -map 0:v -map 1:a {{dir}}/{{name}}.webm
                          -t {{time}} -filter_complex '
                            [1:a] showvolume=w=640:p=0.8 [vol];
                            [0:v] scale=640:-2 [img];
                            [img][vol] overlay=0:0 [preview]'
                          -map '[preview]' -r 1 -update 1 {{previewdir}}/preview.jpg'''

    preview = '{{previewdir}}/preview.jpg'

This command will still update a preview image every second.
But instead of just writing a frame from the video stream,
it writes the output of a video filter which:

- Generates an image representing the volume of the audio
- Scales the input video to a horizontal 640px  - 
- Overlays the video with the volume meter
